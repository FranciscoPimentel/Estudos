global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

## Configurações Haproxy K8s API Load Balance ##
frontend k8s_frontend
 # my server has  IP addresses, but you can use *:6443 to listen on all interfaces and on that specific port
   bind *:{{ port_k8s }}
   mode tcp
   default_backend k8sapi_backend

backend k8sapi_backend
   mode tcp
   option tcp-check
   balance roundrobin
   default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100

# k8s apiServer requires a host
{% for host in groups['controlplanes'] %}
   option httpchk GET /healthz HTTP/1.1\r\nHost:\ {{ hostvars[host]['ansible_host'] }}
{% endfor %}

# Disable ssl verification as we have self-signed certs
{% for host in groups['controlplanes'] %}
   server k8s_{{ branch}}-{{ host }} {{ hostvars[host]['ansible_host'] }}:{{ port_k8s }} check check-ssl verify none
{% endfor %}

frontend k8singress_frontend
   mode http
   bind *:{{ port_http }}
   http-request redirect scheme https
   default_backend k8singress_backend

frontend k8singressssl_frontend
   mode http
   bind *:{{ port_https }} ssl crt /etc/ssl/private/tcp.com.br.pem
   default_backend k8singress_backend

backend k8singress_backend
   mode http
   balance roundrobin
   default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
{% for host in groups['workers'] %}
   server k8s_{{ branch }}-{{ host }} {{ hostvars[host]['ansible_host'] }}:{{ port_http }} check
{% endfor %}

# Status Haproxy Balanceador 
listen stats
    bind *:{{ port_stats_haproxy }} ssl crt /etc/ssl/private/tcp.com.br.pem
    mode http
    stats enable
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri /
    stats auth admin:password
    stats refresh 10s
