# Invetário refernte ao ambinte <environment>
running_localhost:
  hosts:
    localhost:
  vars:
    ansible_connection: local
# Lista usuários iniciais, a execução é local por KUBECTL       
    rbac_groups:
      devops-admins:
        - joaon
        - josep
        - myano
      devops-deploy:
        - devops-deploy-azure
      devops-support:
        - miguel
        - salvaro           
      devops-readonly:
         - dev

# Servers HAPROXY
haproxy:
  hosts:
    haproxy_<environment>-1:
      ansible_host: <IP> 
    haproxy_<environment>-2:
      ansible_host: <IP>
  vars:
    ip_virtual: <IP>
    port_k8s: 6443
    port_http: 80
    port_https: 443
    port_stats_haproxy: 1936
    port_redis: 7000       
    
# Servers KUBERNETES 

#  Servers KUBERNETES 
# Master
master_k8s:
  hosts:       
    ctrplane-<environment>-1:
      ansible_host: <IP>
  vars:
# Conditionals Flags -> K8S-MASTER   
    ctrl_flags:
      is_k8s_server: true
      in_k8s_master: true
# Variáveis do sistema operacional SYSCTL -> CONTROLPLANES       
    sysctl_vars:
        net.ipv4.tcp_fin_timeout: 30
        net.ipv4.tcp_tw_recycle: 1
        net.ipv4.tcp_tw_reuse: 1
        net.core.rmem_default: 524288
        net.core.wmem_default: 524288
        net.core.wmem_max: 67108864
        net.core.rmem_max: 67108864
        net.ipv4.tcp_rmem: 4096 87380 16777216
        net.ipv4.tcp_wmem: 4096 87380 16777216
        net.ipv4.ip_local_port_range: 1024 65535
        fs.file-max: 2097152

## Controlplanes
controlplanes:
  hosts:
    ctrplane-<environment>-2:
      ansible_host: <IP>
    ctrplane-<environment>-3:
      ansible_host: <IP> 
  vars:
# Conditionals Flags -> K8S-CONTROLPLANES    
    ctrl_flags:
      is_k8s_server: true
      in_k8s_ctrl_planel: true
# Variáveis do sistema operacional SYSCTL -> K8S-CONTROLPLANES             
    sysctl_vars:
        net.ipv4.tcp_fin_timeout: 30
        net.ipv4.tcp_tw_recycle: 1
        net.ipv4.tcp_tw_reuse: 1
        net.core.rmem_default: 524288
        net.core.wmem_default: 524288
        net.core.wmem_max: 67108864
        net.core.rmem_max: 67108864
        net.ipv4.tcp_rmem: 4096 87380 16777216
        net.ipv4.tcp_wmem: 4096 87380 16777216
        net.ipv4.ip_local_port_range: 1024 65535
        fs.file-max: 2097152      

## Workers         
workers:
  hosts:
    worker-<environment>-1:
      ansible_host: <IP>
    worker-<environment>-2:
      ansible_host: <IP>
    worker-<environment>-3:
      ansible_host: <IP>
    worker-<environment>-4:
      ansible_host: <IP>
    worker-<environment>-5:
      ansible_host: <IP>
    worker-<environment>-6:
      ansible_host: <IP>
  vars:
# Conditionals Flags -> K8S-WORKERS    
    ctrl_flags:
      is_k8s_server: true 
      is_k8s_workers: true
      in_k8s_workers: true
# # Variáveis do sistema operacional SYSCTL -> WORKERS    
    sysctl_vars:
        net.ipv4.tcp_fin_timeout: 30
        net.ipv4.tcp_tw_recycle: 1
        net.ipv4.tcp_tw_reuse: 1
        net.core.rmem_default: 524288
        net.core.wmem_default: 524288
        net.core.wmem_max: 67108864
        net.core.rmem_max: 67108864
        net.ipv4.tcp_rmem: 4096 87380 16777216
        net.ipv4.tcp_wmem: 4096 87380 16777216
        net.ipv4.ip_local_port_range: 1024 65535
        fs.file-max: 2097152

## Server REDIS         
redis:
  hosts:
    redis-<environment>-1:
      ansible_host: <IP>
    redis-<environment>-2:
      ansible_host: <IP>
    redis-<environment>-3:
      ansible_host: <IP> 

# Servers OPENSEARCH 
opensearch:
  hosts:
    opensearch-data-1:
      ansible_host: <IP>
    opensearch-data-2:
       ansible_host: <IP> 
    opensearch-dash-coord:
      ansible_host: <IP>
    opensearch-manager:  
      ansible_host: <IP>
  vars:
    opensearch_vars:
      disk_attached: /dev/sdb # Partição do Linux onde será motado os dados do serviço
      format_disk_atached: /dev/sdb1
      opensearch_data: /opensearch # Caminho físico onde ficará os dados do serviço OpenSearch
      version_open: 2.9.0
      version_dash: 2.9.0
      version_java: 17.0.8
      port_opensearch: 9200
      port_dashboard: 5601
      path_dash_crt: /etc/ssl/tls/tcp.com.br.crt
      path_dash_rsa: /etc/ssl/tls/tcp.com.br.rsa
      path_tools_opens: /home/infra/open_tools/
      path_certs: /opt/opensearch/config/certs/
    nodes:
      node-data-1: <IP>
      node-data-2: <IP>
      node-cluster_manager: <IP>
      node-coordinating: <IP> 
 
# Servers RABBITMQ
rabbitmq_primary:
  hosts:
    rabbitmq<environment>1:
      ansible_host: 10.41.12.132
  vars:   
    ctrl_flags:
      rabbit_primary: true
    sysctl_vars:
      net.ipv4.ip_nonlocal_bind: 1
      net.ipv4.tcp_window_scaling: 1
      net.core.rmem_max: 16777216
      net.core.wmem_max: 16777216
      net.ipv4.tcp_rmem: 4096 87380 16777216
      net.ipv4.tcp_wmem: 4096 65536 16777216
      net.ipv4.tcp_syncookies: 1
      net.ipv4.tcp_fin_timeout: 15
      net.ipv4.tcp_synack_retries: 2
      net.ipv4.tcp_max_syn_backlog: 2048
      net.ipv4.tcp_tw_reuse: 1
      net.ipv4.tcp_max_tw_buckets: 360000

rabbitmq:
  hosts:
    rabbitmq<environment>2:
      ansible_host: 10.41.12.133
    rabbitmq<environment>3:
      ansible_host: 10.41.12.134 
  vars:
    ctrl_flags:
      rabbit_secundary: true
    sysctl_vars:
      net.ipv4.ip_nonlocal_bind: 1
      net.ipv4.tcp_window_scaling: 1
      net.core.rmem_max: 16777216
      net.core.wmem_max: 16777216
      net.ipv4.tcp_rmem: 4096 87380 16777216
      net.ipv4.tcp_wmem: 4096 65536 16777216
      net.ipv4.tcp_syncookies: 1
      net.ipv4.tcp_fin_timeout: 15
      net.ipv4.tcp_synack_retries: 2
      net.ipv4.tcp_max_syn_backlog: 2048
      net.ipv4.tcp_tw_reuse: 1
      net.ipv4.tcp_max_tw_buckets: 360000

kubernetes:
  children:
    master_k8s:
    controlplanes:
    workers:

all:
  vars:
# Conditionals FLAGS  
    ctrl_flags:
      is_server: true
      is_k8s_server: true 
      is_k8s_workers: true
      is_haproxy: true 
      is_keepalived: true
      is_ingress: true 
      in_k8s_rbac: true
      in_k8s_master: true   
      in_k8s_workers: true 
      in_k8s_ctrl_planel: true

# # Conditionals FLAGS  
    vars_kubelet:
      evictionSoftGracePeriod: 
        memory.available: 1m30s
        nodefs.available: 1m
        imagefs.available: 1m
        nodefs.inodesFree: 1m
        imagefs.inodesFree: 1m
      evictionSoft:
        memory.available: 500Mi   
        nodefs.available: 10%
        imagefs.available: 10%
        nodefs.inodesFree: 10%
        imagefs.inodesFree: 10%  
# Variáveis globais
    ansible_user: infra
    ansible_ssh_private_key_file: /home/francisco/.ssh/id_rsa
# Variáveis de ambiente (environment)    
    dns_server: 
    - <IP>
    cluster_name: <environment>_config
    environment_name: <environment>
    ip_virtual: <IP>
    network_pod: 10.244.0.0/16 #=> Confirmar 
    port_k8s: 6443
# Versões usadas    
    versions:
      version_k8s: <Versão kubeadm, kubelet, kubectl> # https://kubernetes.io/releases/
      runc_version: <Versão runc deverá colocar o "v" conforme exemplo = v1.1.6> # https://github.com/opencontainers/runc/releases/
      conteinerd_version: <Versão containerd > # https://github.com/containerd/containerd/releases/
      container_network_version: <Versão container network deverá colocar o "v" conforme exemplo = v1.3.0> # https://github.com/containernetworking/plugins/releases/

  children:
    kubernetes:
    haproxy:
    opensearch:
    mongodb:
    rabbitmq:
    redis:
#    
#*** Você deverá apagar as linhas abaixo e comentários em um novo arquivo de inventário ***    
# ==->  Explicação das variáveis sysctl_vars; <-==
#       net.ipv4.tcp_max_orphans: 262144 # Aumentar o num. max de conex tcp orfans
#       net.core.somaxconn: 2048  # Aumentar o número de conexões TCP/IP
#       net.core.netdev_max_backlog: 16384 # Aumentar o número de conexões de entrada backlog
#       net.core.rmem_max: 67108864 # Máximo para Socket Receive Buffer (16Mb)
#       net.ipv4.tcp_wmem: 4096 87380 16777216 # Padrão de envio de socket Buffer (16Mb)
#       net.ipv4.tcp_rmem: 4096 87380 16777216 # Aumentar a alocação para tamanho maximo
#       net.ipv4.tcp_max_syn_backlog: 65536 # Aumentar o número de pedidos pendentes syn permitidos
#       net.ipv4.tcp_slow_start_after_idle: 1 # Evitar cair de volta para retardar início depois que uma conexão estiver inativo
#       net.ipv4.tcp_tw_reuse: 1 # Aumentar o tamanho de tcp-TIME-WAIT para evitar ataques de DOS simples
#       net.ipv4.ip_local_port_range: 1024 65535 # Range de portas para conexão
#       fs.file-max: 2097152 # Como configurar o limite do descritor de arquivo linux com fs.file-max
#       fs.inotify.max_user_watches: 524288 # parâmetro do kernel que define o número máximo de arquivos que podem ser observados por um determinado processo
#       net.ipv4.tcp_fin_timeout: 30 # Timeout - fechamento de conexões TCP após 7 segundos
#       net.ipv4.tcp_synack_retries: 2 # Só repetir a criação de conexões TCP duas vezes 
#       net.ipv4.tcp_syn_retries: 2 # minimizar o tempo que leva para que uma tentativa de conexão falhe
#       net.ipv4.tcp_mem: 8388608 8388608 8388608 # Coloca os valores altos para evitar basicamente qualquer pressão mem nunca ocorra
#       net.ipv4.tcp_max_tw_bucket: 6000000 # Aumenta/limita o número máximo de soquetes permitido em TIME_WAIT 
#       net.ipv4.conf.default.log_martians: 1 # Quando ativado, esse recurso registra pacotes com endereços de origem não roteáveis no log do kernel
#       net.ipv4.tcp_tw_recycle: 1 # Net.ipv4.tcp_tw_recycle é um parâmetro do kernel do Linux que permite a rápida recuperação de soquetes TIME-WAIT na conexão TCP.  
#       net.core.rmem_default: 524288 # padrão: tamanho inicial do buffer de recebimento usado por soquetes TCP.
#       net.core.wmem_default: 524288 #  Quantidade máxima de memória permitida para ajuste automático enviar buffers para soquetes TCP.
#       net.core.wmem_max: 67108864 # Padrão de envio de socket Buffer (16Mb)
#       vm.max_map_count: 262144 # mmapfs por padrão para armazenar seus índices. Os limites padrão do sistema operacional no mmap É provável que as contagens sejam muito baixas, o que pode resultar em exceções de falta de memória.
#       net.ipv4.conf.all.log_martians: 1 # Um pacote enviado em uma rede TCP/IP com um endereço de origem da interface de loopback de teste

# ==-> Explicação das customizações feitas no kubelet vars_kubelet; <-==
# Para os componentes do Kubernetes existem algumas custmozições que podem ser feitas no kubelet,kubadmin, etc, em nosso ambiente  foi alterado somente o
# kubelet conforme descrição abaixo:
#
#    evictionSoftGracePeriod:  # determina o período que o kubelet fará o despejo ou limpeza de recursos que não estão sendo usados, mas ficaram em "cached" .
#      memory.available: 1m30s # tempo de limpeza de memória 
#      nodefs.available: 1m # nodefs - Sistema de arquivos atender aos limites de despejo, o lixo do kubelet coletará pods e contêineres mortos.
#      imagefs.available: 1m # imagefs - Sistema de arquivos atender aos limites de despejo, o kubelet excluirá todas as imagens não utilizadas.
#      nodefs.inodesFree: 1m
#      imagefs.inodesFree: 1m
#    evictionSoft: # Determina quantidade de memoria que o kubelet comecerá a fazer a limpeza de recursos do SO, quando a VM estiver consumindo recursos elevados. 
#      memory.available: 500Mi   
#      nodefs.available: 10%
#      imagefs.available: 10%
#      nodefs.inodesFree: 10%
#      imagefs.inodesFree: 10% 

